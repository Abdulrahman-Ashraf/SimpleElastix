# TODO
# - test output

#
# Lua Tests
#
$(for i=1,#tests do
local script = [["$${SimpleITK_BINARY_DIR}/Testing/Unit/LuaTests/${name}Test.lua"]]
local output = [["$${TEST_HARNESS_TEMP_DIRECTORY}/Lua-${name}-]]..tests[i].tag..[[.nrrd"]]
local baseline = [["$${TEST_HARNESS_DATA_DIRECTORY}/Baseline/BasicFilters_${name}_]]..tests[i].tag..[[.nrrd"]]
OUT=OUT..[[
 sitk_add_lua_test( ${name}.]]..tests[i].tag..[[
  ]]..script..[[
  ]]..tests[i].tag..[[
]]
for j=1,#tests[i].inputs do
    OUT=OUT..[[
  "DATA{$${SimpleITK_DATA_ROOT}/]]..tests[i].inputs[j]..[[}"
]]
end
OUT=OUT..[[
  ]]..output
if tests[i].md5hash then
  OUT=OUT..[[
    IMAGE_MD5_COMPARE ]]..output..[[ ]]..tests[i].md5hash
end
if tests[i].tolerance then
   OUT=OUT..[[
    IMAGE_COMPARE ]]..output..[[ ]]..baseline..[[ ]]..tests[i].tolerance
end
OUT=OUT..[[ )
]]
end)


#
# Python Tests
#
$(for i=1,#tests do
local script = [["$${SimpleITK_BINARY_DIR}/Testing/Unit/PythonTests/${name}Test.py"]]
local output = [["$${TEST_HARNESS_TEMP_DIRECTORY}/Python-${name}-]]..tests[i].tag..[[.nrrd"]]
local baseline = [["$${TEST_HARNESS_DATA_DIRECTORY}/Baseline/BasicFilters_${name}_]]..tests[i].tag..[[.nrrd"]]
OUT=OUT..[[
 sitk_add_python_test( ${name}.]]..tests[i].tag..[[
   ]]..script..[[
   ]]..tests[i].tag
for j=1,#tests[i].inputs do
  OUT=OUT..[[
  "DATA{$${SimpleITK_DATA_ROOT}/]]..tests[i].inputs[j]..[[}"]]
end
OUT=OUT..[[
  ]]..output
if tests[i].md5hash then
  OUT=OUT..[[
    IMAGE_MD5_COMPARE ]]..output..[[ ]]..tests[i].md5hash
end
if tests[i].tolerance then
   OUT=OUT..[[
    IMAGE_COMPARE ]]..output..[[ ]]..baseline..[[ ]]..tests[i].tolerance
end
OUT=OUT..[[ )
]]
end)

#
# Ruby Tests
#
$(for i=1,#tests do
local script = [["$${SimpleITK_BINARY_DIR}/Testing/Unit/RubyTests/${name}Test.rb"]]
local output = [["$${TEST_HARNESS_TEMP_DIRECTORY}/Ruby-${name}-]]..tests[i].tag..[[.nrrd"]]
local baseline = [["$${TEST_HARNESS_DATA_DIRECTORY}/Baseline/BasicFilters_${name}_]]..tests[i].tag..[[.nrrd"]]
OUT=OUT..[[
 sitk_add_ruby_test( ${name}.]]..tests[i].tag..[[
  ]]..script..[[
  ]]..tests[i].tag..[[
]]
for j=1,#tests[i].inputs do
    OUT=OUT..[[
  "DATA{$${SimpleITK_DATA_ROOT}/]]..tests[i].inputs[j]..[[}"
]]
end
OUT=OUT..[[
  ]]..output
if tests[i].md5hash then
  OUT=OUT..[[
    IMAGE_MD5_COMPARE ]]..output..[[ ]]..tests[i].md5hash
end
if tests[i].tolerance then
   OUT=OUT..[[
    IMAGE_COMPARE ]]..output..[[ ]]..baseline..[[ ]]..tests[i].tolerance
end
OUT=OUT..[[ )
]]
end)

#
# R Tests
#
$(for i=1,#tests do
local script = [["$${SimpleITK_BINARY_DIR}/Testing/Unit/RTests/${name}Test.R"]]
local output = [["$${TEST_HARNESS_TEMP_DIRECTORY}/R-${name}-]]..tests[i].tag..[[.nrrd"]]
local baseline = [["$${TEST_HARNESS_DATA_DIRECTORY}/Baseline/BasicFilters_${name}_]]..tests[i].tag..[[.nrrd"]]
OUT=OUT..[[
 sitk_add_r_test( ${name}.]]..tests[i].tag..[[
  ]]..script..[[
  ]]..tests[i].tag..[[
]]
for j=1,#tests[i].inputs do
    OUT=OUT..[[
  "DATA{$${SimpleITK_DATA_ROOT}/]]..tests[i].inputs[j]..[[}"
]]
end
OUT=OUT..[[
  ]]..output
if tests[i].md5hash then
  OUT=OUT..[[
    IMAGE_MD5_COMPARE ]]..output..[[ ]]..tests[i].md5hash
end
if tests[i].tolerance then
   OUT=OUT..[[
    IMAGE_COMPARE ]]..output..[[ ]]..baseline..[[ ]]..tests[i].tolerance
end
OUT=OUT..[[ )
]]
end)

#
# Tcl Tests
#
$(for i=1,#tests do
local script = [["$${SimpleITK_BINARY_DIR}/Testing/Unit/TclTests/${name}Test.tcl"]]
local output = [["$${TEST_HARNESS_TEMP_DIRECTORY}/Tcl-${name}-]]..tests[i].tag..[[.nrrd"]]
local baseline = [["$${TEST_HARNESS_DATA_DIRECTORY}/Baseline/BasicFilters_${name}_]]..tests[i].tag..[[.nrrd"]]
OUT=OUT..[[
 sitk_add_tcl_test( ${name}.]]..tests[i].tag..[[
  ]]..script..[[
  ]]..tests[i].tag..[[
]]
for j=1,#tests[i].inputs do
    OUT=OUT..[[
  "DATA{$${SimpleITK_DATA_ROOT}/]]..tests[i].inputs[j]..[[}"
]]
end

OUT=OUT..[[
  ]]..output
if tests[i].md5hash then
  OUT=OUT..[[
    IMAGE_MD5_COMPARE ]]..output..[[ ]]..tests[i].md5hash
end
if tests[i].tolerance then
   OUT=OUT..[[
    IMAGE_COMPARE ]]..output..[[ ]]..baseline..[[ ]]..tests[i].tolerance
end
OUT=OUT..[[ )
]]
end)


#
# Java Tests
#
$(for i=1,#tests do
local script = [["$${SimpleITK_BINARY_DIR}/Testing/Unit/JavaTests/${name}Test.java"]]
local output = [["$${TEST_HARNESS_TEMP_DIRECTORY}/Java-${name}-]]..tests[i].tag..[[.nrrd"]]
local baseline = [["$${TEST_HARNESS_DATA_DIRECTORY}/Baseline/BasicFilters_${name}_]]..tests[i].tag..[[.nrrd"]]
OUT=OUT..[[
 sitk_add_java_test( ${name}.]]..tests[i].tag..[[
  ]]..script..[[
  ]]..tests[i].tag..[[
]]
for j=1,#tests[i].inputs do
    OUT=OUT..[[
  "DATA{$${SimpleITK_DATA_ROOT}/]]..tests[i].inputs[j]..[[}"
]]
end
OUT=OUT..[[
  ]]..output
if tests[i].md5hash then
  OUT=OUT..[[
    IMAGE_MD5_COMPARE ]]..output..[[ ]]..tests[i].md5hash
end
if tests[i].tolerance then
   OUT=OUT..[[
    IMAGE_COMPARE ]]..output..[[ ]]..baseline..[[ ]]..tests[i].tolerance
end
OUT=OUT..[[ )
]]
end)



#
# CSharp Tests
#
$(for i=1,#tests do
local script = [["$${SimpleITK_BINARY_DIR}/Testing/Unit/CSharpTests/${name}Test.cs"]]
local output = [["$${TEST_HARNESS_TEMP_DIRECTORY}/CSharp-${name}-]]..tests[i].tag..[[.nrrd"]]
local baseline = [["$${TEST_HARNESS_DATA_DIRECTORY}/Baseline/BasicFilters_${name}_]]..tests[i].tag..[[.nrrd"]]
OUT=OUT..[[
 sitk_add_csharp_test( ${name}.]]..tests[i].tag..[[
  ]]..script..[[
  ]]..tests[i].tag..[[
]]
for j=1,#tests[i].inputs do
    OUT=OUT..[[
  "DATA{$${SimpleITK_DATA_ROOT}/]]..tests[i].inputs[j]..[[}"
]]
end
OUT=OUT..[[
  ]]..output
if tests[i].md5hash then
  OUT=OUT..[[
    IMAGE_MD5_COMPARE ]]..output..[[ ]]..tests[i].md5hash
end
if tests[i].tolerance then
   OUT=OUT..[[
    IMAGE_COMPARE ]]..output..[[ ]]..baseline..[[ ]]..tests[i].tolerance
end
OUT=OUT..[[ )
]]
end)
